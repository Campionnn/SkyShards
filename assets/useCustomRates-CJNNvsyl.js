var O=Object.defineProperty,$=Object.defineProperties;var F=Object.getOwnPropertyDescriptors;var S=Object.getOwnPropertySymbols;var j=Object.prototype.hasOwnProperty,k=Object.prototype.propertyIsEnumerable;var K=(a,e,t)=>e in a?O(a,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[e]=t,f=(a,e)=>{for(var t in e||(e={}))j.call(e,t)&&K(a,t,e[t]);if(S)for(var t of S(e))k.call(e,t)&&K(a,t,e[t]);return a},T=(a,e)=>$(a,F(e));var E=a=>typeof a=="symbol"?a:a+"",L=(a,e)=>{var t={};for(var s in a)j.call(a,s)&&e.indexOf(s)<0&&(t[s]=a[s]);if(a!=null&&S)for(var s of S(a))e.indexOf(s)<0&&k.call(a,s)&&(t[s]=a[s]);return t};var y=(a,e,t)=>K(a,typeof e!="symbol"?e+"":e,t);var h=(a,e,t)=>new Promise((s,n)=>{var c=r=>{try{R(t.next(r))}catch(o){n(o)}},m=r=>{try{R(t.throw(r))}catch(o){n(o)}},R=r=>r.done?s(r.value):Promise.resolve(r.value).then(c,m);R((t=t.apply(a,e)).next())});import{r as C}from"./vendor-e8ACzjHW.js";const d=class d{constructor(){y(this,"shardsCache",null);y(this,"shardNameToKeyCache",null);y(this,"defaultRatesCache",null)}static getInstance(){return d.instance||(d.instance=new d),d.instance}loadShards(){return h(this,null,function*(){if(this.shardsCache)return this.shardsCache;try{const t=yield fetch("/SkyShards/fusion-data.json");if(!t.ok)throw new Error(`HTTP error! status: ${t.status}`);const s=yield t.json(),n=yield this.loadDefaultRates();return this.shardsCache=Object.entries(s.shards).map(([c,m])=>T(f({key:c},m),{id:c,rate:n[c]||0})),this.shardsCache}catch(e){throw console.error("Failed to load shards:",e),new Error(`Failed to load shards: ${e}`)}})}getShardNameToKeyMap(){return h(this,null,function*(){if(this.shardNameToKeyCache)return this.shardNameToKeyCache;const e=yield this.loadShards();return this.shardNameToKeyCache=e.reduce((t,s)=>(t[s.name.toLowerCase()]=s.key,t),{}),this.shardNameToKeyCache})}loadDefaultRates(){return h(this,null,function*(){if(this.defaultRatesCache)return this.defaultRatesCache;try{const e=yield fetch("/SkyShards/rates.json");return this.defaultRatesCache=yield e.json(),this.defaultRatesCache}catch(e){throw new Error(`Failed to load default rates: ${e}`)}})}searchShards(e){return h(this,null,function*(){const t=yield this.loadShards(),s=e.toLowerCase();return t.filter(n=>n.name.toLowerCase().includes(s))})}getShardByKey(e){return h(this,null,function*(){return(yield this.loadShards()).find(s=>s.key===e)})}getShardByName(e){return h(this,null,function*(){const s=(yield this.getShardNameToKeyMap())[e.toLowerCase()];if(s)return this.getShardByKey(s)})}};y(d,"instance");let N=d;const v=()=>{const[a,e]=C.useState({}),[t,s]=C.useState({}),[n,c]=C.useState(!0);return C.useEffect(()=>{h(null,null,function*(){try{c(!0);const i=yield N.getInstance().loadDefaultRates();s(i);const l=localStorage.getItem("customRates");if(l)try{const u=JSON.parse(l);e(f({},u))}catch(u){e({})}else e({})}catch(o){console.error("Failed to load rates:",o),e({}),s({})}finally{c(!1)}})},[]),{customRates:a,defaultRates:t,loading:n,updateRate:(r,o)=>{let i;if(o===void 0){const u=a,{[r]:g}=u,w=L(u,[E(r)]);i=f({},w)}else i=T(f({},a),{[r]:o});e(i);const l=Object.entries(i).reduce((g,[w,p])=>(p!==void 0&&p!==t[w]&&(g[w]=p),g),{});Object.keys(l).length>0?localStorage.setItem("customRates",JSON.stringify(l)):localStorage.removeItem("customRates")},resetRates:()=>{e({}),localStorage.removeItem("customRates")}}};export{N as D,v as u};
